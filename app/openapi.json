{
  "openapi": "3.1.0",
  "info": {
    "title": "Student Room Management API",
    "description": "A REST API for managing students and rooms with CRUD operations",
    "version": "1.0.0"
  },
  "paths": {
    "/": {
      "get": {
        "summary": "Root",
        "description": "Root endpoint with API information",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "Health check endpoint",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    },
    "/api/v1/students/": {
      "get": {
        "tags": [
          "Students"
        ],
        "summary": "Get all students",
        "description": "Retrieve all students with optional filtering and pagination metadata",
        "operationId": "get_students_api_v1_students__get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of students to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of students to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Maximum number of students to return",
              "default": 10,
              "title": "Limit"
            },
            "description": "Maximum number of students to return"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by name (partial match)",
              "title": "Name"
            },
            "description": "Filter by name (partial match)"
          },
          {
            "name": "sex",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SexEnum"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by sex (M or F)",
              "title": "Sex"
            },
            "description": "Filter by sex (M or F)"
          },
          {
            "name": "room_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by room ID",
              "title": "Room Id"
            },
            "description": "Filter by room ID"
          },
          {
            "name": "has_room",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter students with/without room assignment",
              "title": "Has Room"
            },
            "description": "Filter students with/without room assignment"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResponse_StudentResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Students"
        ],
        "summary": "Create new student",
        "description": "Create a new student",
        "operationId": "create_student_api_v1_students__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Student created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentResponse"
                }
              }
            }
          },
          "409": {
            "description": "Student with this ID already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid room assignment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/students/{student_id}": {
      "get": {
        "tags": [
          "Students"
        ],
        "summary": "Get student by ID",
        "description": "Retrieve a specific student by ID with room information",
        "operationId": "get_student_api_v1_students__student_id__get",
        "parameters": [
          {
            "name": "student_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Student Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentWithRoomResponse"
                }
              }
            }
          },
          "404": {
            "description": "Student not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Students"
        ],
        "summary": "Update student",
        "description": "Update an existing student",
        "operationId": "update_student_api_v1_students__student_id__put",
        "parameters": [
          {
            "name": "student_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Student Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentResponse"
                }
              }
            }
          },
          "404": {
            "description": "Student not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid room assignment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Students"
        ],
        "summary": "Delete student",
        "description": "Delete a student",
        "operationId": "delete_student_api_v1_students__student_id__delete",
        "parameters": [
          {
            "name": "student_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Student Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentResponse"
                }
              }
            }
          },
          "404": {
            "description": "Student not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/students/{student_id}/move": {
      "patch": {
        "tags": [
          "Students"
        ],
        "summary": "Move student to different room",
        "description": "Move a student to a different room or unassign from room",
        "operationId": "move_student_api_v1_students__student_id__move_patch",
        "parameters": [
          {
            "name": "student_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Student Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentMoveRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentResponse"
                }
              }
            }
          },
          "404": {
            "description": "Student not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid room assignment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/rooms/": {
      "get": {
        "tags": [
          "Rooms"
        ],
        "summary": "Get all rooms",
        "description": "Retrieve all rooms with pagination metadata",
        "operationId": "get_rooms_api_v1_rooms__get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of rooms to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of rooms to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Maximum number of rooms to return",
              "default": 10,
              "title": "Limit"
            },
            "description": "Maximum number of rooms to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResponse_RoomResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Rooms"
        ],
        "summary": "Create new room",
        "description": "Create a new room",
        "operationId": "create_room_api_v1_rooms__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoomCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Room created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoomResponse"
                }
              }
            }
          },
          "409": {
            "description": "Room with this ID already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/rooms/{room_id}": {
      "get": {
        "tags": [
          "Rooms"
        ],
        "summary": "Get room by ID",
        "description": "Retrieve a specific room by ID",
        "operationId": "get_room_api_v1_rooms__room_id__get",
        "parameters": [
          {
            "name": "room_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Room Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoomResponse"
                }
              }
            }
          },
          "404": {
            "description": "Room not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Rooms"
        ],
        "summary": "Update room",
        "description": "Update an existing room",
        "operationId": "update_room_api_v1_rooms__room_id__put",
        "parameters": [
          {
            "name": "room_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Room Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoomUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoomResponse"
                }
              }
            }
          },
          "404": {
            "description": "Room not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Rooms"
        ],
        "summary": "Delete room",
        "description": "Delete a room (only if no students are assigned)",
        "operationId": "delete_room_api_v1_rooms__room_id__delete",
        "parameters": [
          {
            "name": "room_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Room Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoomResponse"
                }
              }
            }
          },
          "404": {
            "description": "Room not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Room has students assigned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/rooms/{room_id}/students": {
      "get": {
        "tags": [
          "Rooms"
        ],
        "summary": "Get students in room",
        "description": "Get all students assigned to a specific room with pagination metadata",
        "operationId": "get_students_in_room_api_v1_rooms__room_id__students_get",
        "parameters": [
          {
            "name": "room_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Room Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of students to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of students to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Maximum number of students to return",
              "default": 10,
              "title": "Limit"
            },
            "description": "Maximum number of students to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResponse_StudentResponse_"
                }
              }
            }
          },
          "404": {
            "description": "Room not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "properties": {
          "error": {
            "type": "string",
            "title": "Error"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "status_code": {
            "type": "integer",
            "title": "Status Code"
          }
        },
        "type": "object",
        "required": [
          "error",
          "message",
          "status_code"
        ],
        "title": "ErrorResponse",
        "description": "Standard error response"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "PaginatedResponse_RoomResponse_": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/RoomResponse"
            },
            "type": "array",
            "title": "Data",
            "description": "List of items"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of items"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number"
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Items per page"
          },
          "pages": {
            "type": "integer",
            "title": "Pages",
            "description": "Total number of pages"
          },
          "has_next": {
            "type": "boolean",
            "title": "Has Next",
            "description": "Whether there is a next page",
            "readOnly": true
          },
          "has_prev": {
            "type": "boolean",
            "title": "Has Prev",
            "description": "Whether there is a previous page",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "data",
          "total",
          "page",
          "size",
          "pages",
          "has_next",
          "has_prev"
        ],
        "title": "PaginatedResponse[RoomResponse]"
      },
      "PaginatedResponse_StudentResponse_": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/StudentResponse"
            },
            "type": "array",
            "title": "Data",
            "description": "List of items"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of items"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number"
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Items per page"
          },
          "pages": {
            "type": "integer",
            "title": "Pages",
            "description": "Total number of pages"
          },
          "has_next": {
            "type": "boolean",
            "title": "Has Next",
            "description": "Whether there is a next page",
            "readOnly": true
          },
          "has_prev": {
            "type": "boolean",
            "title": "Has Prev",
            "description": "Whether there is a previous page",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "data",
          "total",
          "page",
          "size",
          "pages",
          "has_next",
          "has_prev"
        ],
        "title": "PaginatedResponse[StudentResponse]"
      },
      "RoomCreate": {
        "properties": {
          "room_id": {
            "type": "integer",
            "exclusiveMinimum": 0,
            "title": "Room Id"
          },
          "name": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "room_id",
          "name"
        ],
        "title": "RoomCreate"
      },
      "RoomResponse": {
        "properties": {
          "room_id": {
            "type": "integer",
            "exclusiveMinimum": 0,
            "title": "Room Id"
          },
          "name": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "room_id",
          "name"
        ],
        "title": "RoomResponse"
      },
      "RoomUpdate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "RoomUpdate"
      },
      "SexEnum": {
        "type": "string",
        "enum": [
          "M",
          "F"
        ],
        "title": "SexEnum",
        "description": "Sex enumeration"
      },
      "StudentCreate": {
        "properties": {
          "student_id": {
            "type": "integer",
            "exclusiveMinimum": 0,
            "title": "Student Id"
          },
          "name": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "Name"
          },
          "birthday": {
            "type": "string",
            "format": "date",
            "title": "Birthday"
          },
          "sex": {
            "$ref": "#/components/schemas/SexEnum"
          },
          "room_id": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Room Id"
          }
        },
        "type": "object",
        "required": [
          "student_id",
          "name",
          "birthday",
          "sex"
        ],
        "title": "StudentCreate"
      },
      "StudentMoveRequest": {
        "properties": {
          "room_id": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Room Id"
          }
        },
        "type": "object",
        "title": "StudentMoveRequest"
      },
      "StudentResponse": {
        "properties": {
          "student_id": {
            "type": "integer",
            "exclusiveMinimum": 0,
            "title": "Student Id"
          },
          "name": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "Name"
          },
          "birthday": {
            "type": "string",
            "format": "date",
            "title": "Birthday"
          },
          "sex": {
            "$ref": "#/components/schemas/SexEnum"
          },
          "room_id": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Room Id"
          }
        },
        "type": "object",
        "required": [
          "student_id",
          "name",
          "birthday",
          "sex"
        ],
        "title": "StudentResponse"
      },
      "StudentUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "birthday": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birthday"
          },
          "sex": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SexEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "room_id": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Room Id"
          }
        },
        "type": "object",
        "title": "StudentUpdate"
      },
      "StudentWithRoomResponse": {
        "properties": {
          "student_id": {
            "type": "integer",
            "exclusiveMinimum": 0,
            "title": "Student Id"
          },
          "name": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "Name"
          },
          "birthday": {
            "type": "string",
            "format": "date",
            "title": "Birthday"
          },
          "sex": {
            "$ref": "#/components/schemas/SexEnum"
          },
          "room_id": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Room Id"
          },
          "room": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RoomResponse"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "student_id",
          "name",
          "birthday",
          "sex"
        ],
        "title": "StudentWithRoomResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}